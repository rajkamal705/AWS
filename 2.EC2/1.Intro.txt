1> Billing and cost management:
-> you can set your Budget, like zero-Spend Budget, monthly-Spend Budget etc.

2> Amazon EC2: (Elastic compute cloud).
---------------------------------------
-> It provides infrastructure as a servive(IaaS) on aws.
-> It mainly consist the capability of :
1> Renting virtual machine(EC2)
2> Storing data on virtual drive(EBS)
3> Distributing load across machines(ELB)
4> Scaling the services using auto scaling group(ASG)

=> EC2 sizing and configuration option:
-----------------------------------------
-> EC2 sizing and configuration determines how much compute Power, memory and storage your virtual server will have.
-> EC2 allows renting virtual machines called instances, with customizable OS, RAM, CPU, storage and network options.
-> EC2 instance types that we will be using is t2.micro. It's free upto 750 hr per month.
-> While creating EC2 instance it also ensure the following things:
   1> Network Card: speed of the card, public IP address.
   2> Firewall rules: Security Group.
   3> Bootstrap Script(configure at first launch): EC2 user data.
   -> User data script run once when instance start
   -> EC2 User data is used to automate 1> installing updates 2> updating software, downloading common files from the internet.
-> user data script will be something like:
   #!/bin/bash
   yum update -y
   yum install -y httpd
   systemctl enable httpd
   systemctl start httpd
   echo "<h1>Hello from EC2</h1>" > /var/www/html/index.html

-> Instance type: m5.2xlarge -> here, m determine class and 5 determine generation. so this is 5th generation, m class instance type.

3> EC2 Instance Types:
-----------------------
1> Compute optimized instances:
-> compute optimized instances are designed for heavy computing tasks require high level of procsssor performance:
-> Use cases:
   -> Batch processing of data.
   -> media transcoding.
   -> high performance web servers.
   -> High performance computing. 
   -> Machine learning.
   -> dedicated gaming server. 
-> All compute optimized instances currently have names starting with C, such as C5, C6, and so on.

2> Memory optimized instances:
-> Memory optimized instances provide fast performance for workloads that procss large datasets in memory(RAM).
-> Use Cases:
   -> High performance relational or non relational databases.
   -> In memory databases.
   -> Distributed web scale cache stores.
   -> Business intelligence application.
   -> Real time processing of big unstructured data.
-> These instances often belong to the R series (where R stands for RAM)

3> Storage optimized instances:
-> storage optimized instances are ideal when accessing large datasets on local storage.
-> Use cases:
   -> High frequency online transactional processing system.
   -> Relational and no sql databases.
   -> cache for in-memory databases.
   -> Data warehousing applications
   -> Distributed file system.
-> Storage optimized instances in AWS typically start with I, G, or H1.

-> To know about diff types of EC2 instances and it's use, follow this link: https://aws.amazon.com/ec2/instance-types/

4> Security Group:
---------------------
-> A security group is like firewall for EC2 insance. It controls inbound(What trafic is allowed to enter) and 
   outbound(what traffic is allowed to leave) for EC2 instance.
-> It's a set of firewall rules attached to EC2 instances.
-> This defines who can connect to the instances and what ports/protocols can be used.
-> Security groups are stateful, meaning: 
   1> if inbound allows a connection(like SSH from your laptop), return traffic is automatically allowed.
   2> you don't need to manually allow outbound for the reply.

1> Inbound Rules:
-----------------
-> This controls how much traffic is allow to your EC2 instance from network or other aws resources.
| Type   | Protocol | Port Range | Source         | Description         |
| ------ | -------- | ---------- | -------------- | ------------------- |
| SSH    | TCP      | 22         | 203.0.113.0/24 | Allow SSH access    |
| HTTP   | TCP      | 80         | 0.0.0.0/0      | Allow web access    |
| Custom | TCP      | 8080       | 10.0.0.0/16    | Allow from VPC only |


2> outbound Rules:
-------------------
-> This controls, What your Ec2 instance is allowed to connect outside.
-> Default outbound rules:
| Type | Protocol | Port Range | Destination | Description        |
| ---- | -------- | ---------- | ----------- | ------------------ |
| All  | All      | All        | 0.0.0.0/0   | Allow all outbound |

-> This means your EC2 can make any outbound requests like:
1> Connecting to the internet
2> hitting public api.
3> sending logs to cloud watch

-> you can restrict it if needed, for ex: allow to specific IP or port.

5> IPV4 and IPV6
-----------------
Q> what is IP?
ans: An IP Address is unique identifier assigned to every device connected to the internet.
     It works like postal address, which allow data packets to reach destination.

-> IPv4 and IPv6 are two versions of the Internet Protocol (IP).

1> IPv4:
-> Uses 32 bit Address, It allows 4.3 billion unique addresses.
-> Format: Decimal format contains 4 number separated by dot. each number range (0-255). Each part is called and octet(8 bit).
   Ex: 192.168.0.1
-> limitations: 4.3 billion addresses are not enough due to explosive internet growth (IoT, mobile, etc.).

2> IPV6:
-> Uses 128-bit addresses, allowing approximately 340 undecillion addresses (massively more than IPv4).
-> Format: Hexadecimal, written as 8 groups of 4 hexadecimal digits, separated by colons :
   Ex: 2001:0db8:85a3:0000:0000:8a2e:0370:7334 -> remove leading zeros 2001:db8:85a3:0:0:8a2e:370:7334
      -> Replace consecutive zero group with :: -> 2001:db8:85a3::8a2e:370:7334

=> Important points about security groups:
-> They can be attached to multiple instances; there is not a one-to-one relationship between security groups and instances.
-> An instance can have multiple security groups attached.
-> Security groups are locked down to your region and VPC combination. If you switch regions or create another VPC, you must 
   create new security groups.
-> Security groups live outside the EC2 instance. If traffic is blocked, the EC2 instance does not even see it; it is a 
   firewall external to the instance.

=> By now, you should have a solid understanding of security groups. For the exam, you need to know the following ports:
-> Port 22 for SSH (Secure Shell), used to log into Linux EC2 instances.
-> Port 21 for FTP (File Transfer Protocol), used to upload files.
-> Port 22 also for SFTP (Secure File Transfer Protocol), which uses SSH for secure file transfer.
-> Port 80 for HTTP, used to access unsecured websites.
-> Port 443 for HTTPS, used to access secured websites.
-> Port 3389 for RDP (Remote Desktop Protocol), used to log into Windows instances.

5> SSH:
---------
-> SSH stands for secure shell.
-> It is a cryptographic network protocol that allows you to securely access and manage remote computers over unsecured network.
-> It's commonly used to :
   -> Remotely log into server like EC2 instance.
   -> Execute commands.
   -> Transfer files securely.

=> SSH in detail:
-> When EC2 instance was created, Aws generated a key-pair. After that
-> a public key was saved in the instance at: ~/.ssh/authorized_keys and
-> A private key (raj_key.pem) was downloaded to your system.

-> so, when we run "ssh -i .\raj_key.pem ec2-user@35.154.4.18" this command, 
   1> SSH client uses the private key to prove your identity.
   2> The EC2 instance matches it with the public key stored in the instance
   3> If they match → Access granted

=> what does this output mean: The authenticity of host '35.154.4.18' can't be established...
-> This is a security warning.
-> It's the first time you're connecting to this server.
-> So your SSH client doesn’t have the EC2 instance's host fingerprint in its known hosts file.
-> When you type yes, it adds the host to your known hosts file:

=> EC2 instance connect :
-------------------------
-> It is alternative to SSH.
-> This allows us to do a browser-based SSH session into our EC2 instance.
->  The cool thing is that, session is managed in the browser instead of using a different command line interface such as Terminal.

* Key Takeaways
- EC2 Instance Connect provides a browser-based SSH session to EC2 instances, simplifying access without managing SSH keys.
- The default username for Amazon Linux 2 AMI is ec2-user, which is automatically set by AWS.
- EC2 Instance Connect requires port 22 to be open in the security group's inbound rules for successful connection.
- This method relies on SSH behind the scenes but eliminates the need for manual SSH key management.

=> EC2 instance Roles:
-> Key Takeaways:
-  Never enter your IAM Access Key ID and Secret Access Key directly into an EC2 instance.
-  Use IAM roles to securely provide AWS credentials to EC2 instances.
-  Attaching an IAM role to an EC2 instance allows AWS CLI commands to execute with the permissions of that role.
-  Changes to IAM role permissions may take some time to propagate and reflect on the instance.
